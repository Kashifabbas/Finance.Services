//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("FinanceDBModel", "FK_Country_LeaseTime_Country", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Ciklum.Atea.Finance.Service.Domain.EntityModel.Country), "Country_LeaseTime", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ciklum.Atea.Finance.Service.Domain.EntityModel.Country_LeaseTime), true)]
[assembly: EdmRelationshipAttribute("FinanceDBModel", "FK_Country_LeaseTime_LeaseTime1", "LeaseTime", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Ciklum.Atea.Finance.Service.Domain.EntityModel.LeaseTime), "Country_LeaseTime", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ciklum.Atea.Finance.Service.Domain.EntityModel.Country_LeaseTime), true)]

#endregion

namespace Ciklum.Atea.Finance.Service.Domain.EntityModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class FinanceDBEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new FinanceDBEntities object using the connection string found in the 'FinanceDBEntities' section of the application configuration file.
        /// </summary>
        public FinanceDBEntities() : base("name=FinanceDBEntities", "FinanceDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FinanceDBEntities object.
        /// </summary>
        public FinanceDBEntities(string connectionString) : base(connectionString, "FinanceDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FinanceDBEntities object.
        /// </summary>
        public FinanceDBEntities(EntityConnection connection) : base(connection, "FinanceDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country_LeaseTime> Country_LeaseTime
        {
            get
            {
                if ((_Country_LeaseTime == null))
                {
                    _Country_LeaseTime = base.CreateObjectSet<Country_LeaseTime>("Country_LeaseTime");
                }
                return _Country_LeaseTime;
            }
        }
        private ObjectSet<Country_LeaseTime> _Country_LeaseTime;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeaseTime> LeaseTimes
        {
            get
            {
                if ((_LeaseTimes == null))
                {
                    _LeaseTimes = base.CreateObjectSet<LeaseTime>("LeaseTimes");
                }
                return _LeaseTimes;
            }
        }
        private ObjectSet<LeaseTime> _LeaseTimes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StoredOffer> StoredOffers
        {
            get
            {
                if ((_StoredOffers == null))
                {
                    _StoredOffers = base.CreateObjectSet<StoredOffer>("StoredOffers");
                }
                return _StoredOffers;
            }
        }
        private ObjectSet<StoredOffer> _StoredOffers;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Country_LeaseTime EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountry_LeaseTime(Country_LeaseTime country_LeaseTime)
        {
            base.AddObject("Country_LeaseTime", country_LeaseTime);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeaseTimes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeaseTimes(LeaseTime leaseTime)
        {
            base.AddObject("LeaseTimes", leaseTime);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StoredOffers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStoredOffers(StoredOffer storedOffer)
        {
            base.AddObject("StoredOffers", storedOffer);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Country_GetAll_Result> Country_GetAll()
        {
            return base.ExecuteFunction<Country_GetAll_Result>("Country_GetAll");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<InterestRate_GetAll_Result> InterestRate_GetAll()
        {
            return base.ExecuteFunction<InterestRate_GetAll_Result>("InterestRate_GetAll");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<LeaseTime_GetAll_Result> LeaseTime_GetAll()
        {
            return base.ExecuteFunction<LeaseTime_GetAll_Result>("LeaseTime_GetAll");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<StoredOffer_GetAll_Result> StoredOffer_GetAll()
        {
            return base.ExecuteFunction<StoredOffer_GetAll_Result>("StoredOffer_GetAll");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="submitter">No Metadata Documentation available.</param>
        /// <param name="submitDate">No Metadata Documentation available.</param>
        /// <param name="offerValue">No Metadata Documentation available.</param>
        /// <param name="country">No Metadata Documentation available.</param>
        /// <param name="customerName">No Metadata Documentation available.</param>
        /// <param name="organizationNumber">No Metadata Documentation available.</param>
        /// <param name="customerEmail">No Metadata Documentation available.</param>
        /// <param name="customerPhone">No Metadata Documentation available.</param>
        /// <param name="leaseTimeMonth">No Metadata Documentation available.</param>
        /// <param name="costOfFund">No Metadata Documentation available.</param>
        /// <param name="margin">No Metadata Documentation available.</param>
        /// <param name="funderMargin">No Metadata Documentation available.</param>
        /// <param name="applicableStartDate">No Metadata Documentation available.</param>
        /// <param name="applicableEndDate">No Metadata Documentation available.</param>
        /// <param name="editNote">No Metadata Documentation available.</param>
        /// <param name="monthlyPayment">No Metadata Documentation available.</param>
        public ObjectResult<StoredOffer_Add_Result> StoredOffer_Add(global::System.String submitter, Nullable<global::System.DateTime> submitDate, global::System.String offerValue, global::System.String country, global::System.String customerName, global::System.String organizationNumber, global::System.String customerEmail, global::System.String customerPhone, Nullable<global::System.Int32> leaseTimeMonth, global::System.String costOfFund, global::System.String margin, global::System.String funderMargin, Nullable<global::System.DateTime> applicableStartDate, Nullable<global::System.DateTime> applicableEndDate, global::System.String editNote, global::System.String monthlyPayment)
        {
            ObjectParameter submitterParameter;
            if (submitter != null)
            {
                submitterParameter = new ObjectParameter("Submitter", submitter);
            }
            else
            {
                submitterParameter = new ObjectParameter("Submitter", typeof(global::System.String));
            }
    
            ObjectParameter submitDateParameter;
            if (submitDate.HasValue)
            {
                submitDateParameter = new ObjectParameter("SubmitDate", submitDate);
            }
            else
            {
                submitDateParameter = new ObjectParameter("SubmitDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter offerValueParameter;
            if (offerValue != null)
            {
                offerValueParameter = new ObjectParameter("OfferValue", offerValue);
            }
            else
            {
                offerValueParameter = new ObjectParameter("OfferValue", typeof(global::System.String));
            }
    
            ObjectParameter countryParameter;
            if (country != null)
            {
                countryParameter = new ObjectParameter("Country", country);
            }
            else
            {
                countryParameter = new ObjectParameter("Country", typeof(global::System.String));
            }
    
            ObjectParameter customerNameParameter;
            if (customerName != null)
            {
                customerNameParameter = new ObjectParameter("CustomerName", customerName);
            }
            else
            {
                customerNameParameter = new ObjectParameter("CustomerName", typeof(global::System.String));
            }
    
            ObjectParameter organizationNumberParameter;
            if (organizationNumber != null)
            {
                organizationNumberParameter = new ObjectParameter("OrganizationNumber", organizationNumber);
            }
            else
            {
                organizationNumberParameter = new ObjectParameter("OrganizationNumber", typeof(global::System.String));
            }
    
            ObjectParameter customerEmailParameter;
            if (customerEmail != null)
            {
                customerEmailParameter = new ObjectParameter("CustomerEmail", customerEmail);
            }
            else
            {
                customerEmailParameter = new ObjectParameter("CustomerEmail", typeof(global::System.String));
            }
    
            ObjectParameter customerPhoneParameter;
            if (customerPhone != null)
            {
                customerPhoneParameter = new ObjectParameter("CustomerPhone", customerPhone);
            }
            else
            {
                customerPhoneParameter = new ObjectParameter("CustomerPhone", typeof(global::System.String));
            }
    
            ObjectParameter leaseTimeMonthParameter;
            if (leaseTimeMonth.HasValue)
            {
                leaseTimeMonthParameter = new ObjectParameter("LeaseTimeMonth", leaseTimeMonth);
            }
            else
            {
                leaseTimeMonthParameter = new ObjectParameter("LeaseTimeMonth", typeof(global::System.Int32));
            }
    
            ObjectParameter costOfFundParameter;
            if (costOfFund != null)
            {
                costOfFundParameter = new ObjectParameter("CostOfFund", costOfFund);
            }
            else
            {
                costOfFundParameter = new ObjectParameter("CostOfFund", typeof(global::System.String));
            }
    
            ObjectParameter marginParameter;
            if (margin != null)
            {
                marginParameter = new ObjectParameter("Margin", margin);
            }
            else
            {
                marginParameter = new ObjectParameter("Margin", typeof(global::System.String));
            }
    
            ObjectParameter funderMarginParameter;
            if (funderMargin != null)
            {
                funderMarginParameter = new ObjectParameter("FunderMargin", funderMargin);
            }
            else
            {
                funderMarginParameter = new ObjectParameter("FunderMargin", typeof(global::System.String));
            }
    
            ObjectParameter applicableStartDateParameter;
            if (applicableStartDate.HasValue)
            {
                applicableStartDateParameter = new ObjectParameter("ApplicableStartDate", applicableStartDate);
            }
            else
            {
                applicableStartDateParameter = new ObjectParameter("ApplicableStartDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter applicableEndDateParameter;
            if (applicableEndDate.HasValue)
            {
                applicableEndDateParameter = new ObjectParameter("ApplicableEndDate", applicableEndDate);
            }
            else
            {
                applicableEndDateParameter = new ObjectParameter("ApplicableEndDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter editNoteParameter;
            if (editNote != null)
            {
                editNoteParameter = new ObjectParameter("EditNote", editNote);
            }
            else
            {
                editNoteParameter = new ObjectParameter("EditNote", typeof(global::System.String));
            }
    
            ObjectParameter monthlyPaymentParameter;
            if (monthlyPayment != null)
            {
                monthlyPaymentParameter = new ObjectParameter("MonthlyPayment", monthlyPayment);
            }
            else
            {
                monthlyPaymentParameter = new ObjectParameter("MonthlyPayment", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<StoredOffer_Add_Result>("StoredOffer_Add", submitterParameter, submitDateParameter, offerValueParameter, countryParameter, customerNameParameter, organizationNumberParameter, customerEmailParameter, customerPhoneParameter, leaseTimeMonthParameter, costOfFundParameter, marginParameter, funderMarginParameter, applicableStartDateParameter, applicableEndDateParameter, editNoteParameter, monthlyPaymentParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinanceDBModel", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="currency">Initial value of the Currency property.</param>
        /// <param name="roundCurrency">Initial value of the RoundCurrency property.</param>
        public static Country CreateCountry(global::System.Int32 id, global::System.String name, global::System.String currency, global::System.Boolean roundCurrency)
        {
            Country country = new Country();
            country.ID = id;
            country.Name = name;
            country.Currency = currency;
            country.RoundCurrency = roundCurrency;
            return country;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mail
        {
            get
            {
                return _Mail;
            }
            set
            {
                OnMailChanging(value);
                ReportPropertyChanging("Mail");
                _Mail = StructuralObject.SetValidValue(value, true, "Mail");
                ReportPropertyChanged("Mail");
                OnMailChanged();
            }
        }
        private global::System.String _Mail;
        partial void OnMailChanging(global::System.String value);
        partial void OnMailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EditNote
        {
            get
            {
                return _EditNote;
            }
            set
            {
                OnEditNoteChanging(value);
                ReportPropertyChanging("EditNote");
                _EditNote = StructuralObject.SetValidValue(value, true, "EditNote");
                ReportPropertyChanged("EditNote");
                OnEditNoteChanged();
            }
        }
        private global::System.String _EditNote;
        partial void OnEditNoteChanging(global::System.String value);
        partial void OnEditNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                OnCurrencyChanging(value);
                ReportPropertyChanging("Currency");
                _Currency = StructuralObject.SetValidValue(value, false, "Currency");
                ReportPropertyChanged("Currency");
                OnCurrencyChanged();
            }
        }
        private global::System.String _Currency;
        partial void OnCurrencyChanging(global::System.String value);
        partial void OnCurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean RoundCurrency
        {
            get
            {
                return _RoundCurrency;
            }
            set
            {
                OnRoundCurrencyChanging(value);
                ReportPropertyChanging("RoundCurrency");
                _RoundCurrency = StructuralObject.SetValidValue(value, "RoundCurrency");
                ReportPropertyChanged("RoundCurrency");
                OnRoundCurrencyChanged();
            }
        }
        private global::System.Boolean _RoundCurrency;
        partial void OnRoundCurrencyChanging(global::System.Boolean value);
        partial void OnRoundCurrencyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinanceDBModel", "FK_Country_LeaseTime_Country", "Country_LeaseTime")]
        public EntityCollection<Country_LeaseTime> Country_LeaseTime
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Country_LeaseTime>("FinanceDBModel.FK_Country_LeaseTime_Country", "Country_LeaseTime");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Country_LeaseTime>("FinanceDBModel.FK_Country_LeaseTime_Country", "Country_LeaseTime", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinanceDBModel", Name="Country_LeaseTime")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country_LeaseTime : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country_LeaseTime object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="applicableStartDate">Initial value of the ApplicableStartDate property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="isDeleted">Initial value of the isDeleted property.</param>
        public static Country_LeaseTime CreateCountry_LeaseTime(global::System.Int32 id, global::System.DateTime applicableStartDate, global::System.DateTime createdDate, global::System.Boolean isDeleted)
        {
            Country_LeaseTime country_LeaseTime = new Country_LeaseTime();
            country_LeaseTime.ID = id;
            country_LeaseTime.ApplicableStartDate = applicableStartDate;
            country_LeaseTime.CreatedDate = createdDate;
            country_LeaseTime.isDeleted = isDeleted;
            return country_LeaseTime;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value, "CountryID");
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryID;
        partial void OnCountryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LeaseTimeID
        {
            get
            {
                return _LeaseTimeID;
            }
            set
            {
                OnLeaseTimeIDChanging(value);
                ReportPropertyChanging("LeaseTimeID");
                _LeaseTimeID = StructuralObject.SetValidValue(value, "LeaseTimeID");
                ReportPropertyChanged("LeaseTimeID");
                OnLeaseTimeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LeaseTimeID;
        partial void OnLeaseTimeIDChanging(Nullable<global::System.Int32> value);
        partial void OnLeaseTimeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CostOfFunds
        {
            get
            {
                return _CostOfFunds;
            }
            set
            {
                OnCostOfFundsChanging(value);
                ReportPropertyChanging("CostOfFunds");
                _CostOfFunds = StructuralObject.SetValidValue(value, true, "CostOfFunds");
                ReportPropertyChanged("CostOfFunds");
                OnCostOfFundsChanged();
            }
        }
        private global::System.String _CostOfFunds;
        partial void OnCostOfFundsChanging(global::System.String value);
        partial void OnCostOfFundsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Margin
        {
            get
            {
                return _Margin;
            }
            set
            {
                OnMarginChanging(value);
                ReportPropertyChanging("Margin");
                _Margin = StructuralObject.SetValidValue(value, true, "Margin");
                ReportPropertyChanged("Margin");
                OnMarginChanged();
            }
        }
        private global::System.String _Margin;
        partial void OnMarginChanging(global::System.String value);
        partial void OnMarginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ApplicableStartDate
        {
            get
            {
                return _ApplicableStartDate;
            }
            set
            {
                OnApplicableStartDateChanging(value);
                ReportPropertyChanging("ApplicableStartDate");
                _ApplicableStartDate = StructuralObject.SetValidValue(value, "ApplicableStartDate");
                ReportPropertyChanged("ApplicableStartDate");
                OnApplicableStartDateChanged();
            }
        }
        private global::System.DateTime _ApplicableStartDate;
        partial void OnApplicableStartDateChanging(global::System.DateTime value);
        partial void OnApplicableStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ApplicableEndDate
        {
            get
            {
                return _ApplicableEndDate;
            }
            set
            {
                OnApplicableEndDateChanging(value);
                ReportPropertyChanging("ApplicableEndDate");
                _ApplicableEndDate = StructuralObject.SetValidValue(value, "ApplicableEndDate");
                ReportPropertyChanged("ApplicableEndDate");
                OnApplicableEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ApplicableEndDate;
        partial void OnApplicableEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnApplicableEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FunderMargin
        {
            get
            {
                return _FunderMargin;
            }
            set
            {
                OnFunderMarginChanging(value);
                ReportPropertyChanging("FunderMargin");
                _FunderMargin = StructuralObject.SetValidValue(value, true, "FunderMargin");
                ReportPropertyChanged("FunderMargin");
                OnFunderMarginChanged();
            }
        }
        private global::System.String _FunderMargin;
        partial void OnFunderMarginChanging(global::System.String value);
        partial void OnFunderMarginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedDate
        {
            get
            {
                return _UpdatedDate;
            }
            set
            {
                OnUpdatedDateChanging(value);
                ReportPropertyChanging("UpdatedDate");
                _UpdatedDate = StructuralObject.SetValidValue(value, "UpdatedDate");
                ReportPropertyChanged("UpdatedDate");
                OnUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedDate;
        partial void OnUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isDeleted
        {
            get
            {
                return _isDeleted;
            }
            set
            {
                OnisDeletedChanging(value);
                ReportPropertyChanging("isDeleted");
                _isDeleted = StructuralObject.SetValidValue(value, "isDeleted");
                ReportPropertyChanged("isDeleted");
                OnisDeletedChanged();
            }
        }
        private global::System.Boolean _isDeleted;
        partial void OnisDeletedChanging(global::System.Boolean value);
        partial void OnisDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedDate
        {
            get
            {
                return _DeletedDate;
            }
            set
            {
                OnDeletedDateChanging(value);
                ReportPropertyChanging("DeletedDate");
                _DeletedDate = StructuralObject.SetValidValue(value, "DeletedDate");
                ReportPropertyChanged("DeletedDate");
                OnDeletedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedDate;
        partial void OnDeletedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinanceDBModel", "FK_Country_LeaseTime_Country", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("FinanceDBModel.FK_Country_LeaseTime_Country", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("FinanceDBModel.FK_Country_LeaseTime_Country", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("FinanceDBModel.FK_Country_LeaseTime_Country", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("FinanceDBModel.FK_Country_LeaseTime_Country", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinanceDBModel", "FK_Country_LeaseTime_LeaseTime1", "LeaseTime")]
        public LeaseTime LeaseTime
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeaseTime>("FinanceDBModel.FK_Country_LeaseTime_LeaseTime1", "LeaseTime").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeaseTime>("FinanceDBModel.FK_Country_LeaseTime_LeaseTime1", "LeaseTime").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LeaseTime> LeaseTimeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeaseTime>("FinanceDBModel.FK_Country_LeaseTime_LeaseTime1", "LeaseTime");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LeaseTime>("FinanceDBModel.FK_Country_LeaseTime_LeaseTime1", "LeaseTime", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinanceDBModel", Name="LeaseTime")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeaseTime : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeaseTime object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="months">Initial value of the Months property.</param>
        public static LeaseTime CreateLeaseTime(global::System.Int32 id, global::System.Int32 months)
        {
            LeaseTime leaseTime = new LeaseTime();
            leaseTime.ID = id;
            leaseTime.Months = months;
            return leaseTime;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Months
        {
            get
            {
                return _Months;
            }
            set
            {
                OnMonthsChanging(value);
                ReportPropertyChanging("Months");
                _Months = StructuralObject.SetValidValue(value, "Months");
                ReportPropertyChanged("Months");
                OnMonthsChanged();
            }
        }
        private global::System.Int32 _Months;
        partial void OnMonthsChanging(global::System.Int32 value);
        partial void OnMonthsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinanceDBModel", "FK_Country_LeaseTime_LeaseTime1", "Country_LeaseTime")]
        public EntityCollection<Country_LeaseTime> Country_LeaseTime
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Country_LeaseTime>("FinanceDBModel.FK_Country_LeaseTime_LeaseTime1", "Country_LeaseTime");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Country_LeaseTime>("FinanceDBModel.FK_Country_LeaseTime_LeaseTime1", "Country_LeaseTime", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinanceDBModel", Name="StoredOffer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StoredOffer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StoredOffer object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="submitter">Initial value of the Submitter property.</param>
        /// <param name="submitDate">Initial value of the SubmitDate property.</param>
        /// <param name="offerValue">Initial value of the OfferValue property.</param>
        /// <param name="country">Initial value of the Country property.</param>
        /// <param name="customerName">Initial value of the CustomerName property.</param>
        /// <param name="leaseTimeMonth">Initial value of the LeaseTimeMonth property.</param>
        /// <param name="costOfFund">Initial value of the CostOfFund property.</param>
        /// <param name="margin">Initial value of the Margin property.</param>
        /// <param name="applicableStartDate">Initial value of the ApplicableStartDate property.</param>
        /// <param name="editNote">Initial value of the EditNote property.</param>
        /// <param name="monthlyPayment">Initial value of the MonthlyPayment property.</param>
        /// <param name="isDeleted">Initial value of the isDeleted property.</param>
        public static StoredOffer CreateStoredOffer(global::System.Int32 id, global::System.String submitter, global::System.DateTime submitDate, global::System.String offerValue, global::System.String country, global::System.String customerName, global::System.Int32 leaseTimeMonth, global::System.String costOfFund, global::System.String margin, global::System.DateTime applicableStartDate, global::System.String editNote, global::System.String monthlyPayment, global::System.Boolean isDeleted)
        {
            StoredOffer storedOffer = new StoredOffer();
            storedOffer.ID = id;
            storedOffer.Submitter = submitter;
            storedOffer.SubmitDate = submitDate;
            storedOffer.OfferValue = offerValue;
            storedOffer.Country = country;
            storedOffer.CustomerName = customerName;
            storedOffer.LeaseTimeMonth = leaseTimeMonth;
            storedOffer.CostOfFund = costOfFund;
            storedOffer.Margin = margin;
            storedOffer.ApplicableStartDate = applicableStartDate;
            storedOffer.EditNote = editNote;
            storedOffer.MonthlyPayment = monthlyPayment;
            storedOffer.isDeleted = isDeleted;
            return storedOffer;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Submitter
        {
            get
            {
                return _Submitter;
            }
            set
            {
                OnSubmitterChanging(value);
                ReportPropertyChanging("Submitter");
                _Submitter = StructuralObject.SetValidValue(value, false, "Submitter");
                ReportPropertyChanged("Submitter");
                OnSubmitterChanged();
            }
        }
        private global::System.String _Submitter;
        partial void OnSubmitterChanging(global::System.String value);
        partial void OnSubmitterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SubmitDate
        {
            get
            {
                return _SubmitDate;
            }
            set
            {
                OnSubmitDateChanging(value);
                ReportPropertyChanging("SubmitDate");
                _SubmitDate = StructuralObject.SetValidValue(value, "SubmitDate");
                ReportPropertyChanged("SubmitDate");
                OnSubmitDateChanged();
            }
        }
        private global::System.DateTime _SubmitDate;
        partial void OnSubmitDateChanging(global::System.DateTime value);
        partial void OnSubmitDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OfferValue
        {
            get
            {
                return _OfferValue;
            }
            set
            {
                OnOfferValueChanging(value);
                ReportPropertyChanging("OfferValue");
                _OfferValue = StructuralObject.SetValidValue(value, false, "OfferValue");
                ReportPropertyChanged("OfferValue");
                OnOfferValueChanged();
            }
        }
        private global::System.String _OfferValue;
        partial void OnOfferValueChanging(global::System.String value);
        partial void OnOfferValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, false, "Country");
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CustomerName
        {
            get
            {
                return _CustomerName;
            }
            set
            {
                OnCustomerNameChanging(value);
                ReportPropertyChanging("CustomerName");
                _CustomerName = StructuralObject.SetValidValue(value, false, "CustomerName");
                ReportPropertyChanged("CustomerName");
                OnCustomerNameChanged();
            }
        }
        private global::System.String _CustomerName;
        partial void OnCustomerNameChanging(global::System.String value);
        partial void OnCustomerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrganizationNumber
        {
            get
            {
                return _OrganizationNumber;
            }
            set
            {
                OnOrganizationNumberChanging(value);
                ReportPropertyChanging("OrganizationNumber");
                _OrganizationNumber = StructuralObject.SetValidValue(value, true, "OrganizationNumber");
                ReportPropertyChanged("OrganizationNumber");
                OnOrganizationNumberChanged();
            }
        }
        private global::System.String _OrganizationNumber;
        partial void OnOrganizationNumberChanging(global::System.String value);
        partial void OnOrganizationNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerEmail
        {
            get
            {
                return _CustomerEmail;
            }
            set
            {
                OnCustomerEmailChanging(value);
                ReportPropertyChanging("CustomerEmail");
                _CustomerEmail = StructuralObject.SetValidValue(value, true, "CustomerEmail");
                ReportPropertyChanged("CustomerEmail");
                OnCustomerEmailChanged();
            }
        }
        private global::System.String _CustomerEmail;
        partial void OnCustomerEmailChanging(global::System.String value);
        partial void OnCustomerEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerPhone
        {
            get
            {
                return _CustomerPhone;
            }
            set
            {
                OnCustomerPhoneChanging(value);
                ReportPropertyChanging("CustomerPhone");
                _CustomerPhone = StructuralObject.SetValidValue(value, true, "CustomerPhone");
                ReportPropertyChanged("CustomerPhone");
                OnCustomerPhoneChanged();
            }
        }
        private global::System.String _CustomerPhone;
        partial void OnCustomerPhoneChanging(global::System.String value);
        partial void OnCustomerPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseTimeMonth
        {
            get
            {
                return _LeaseTimeMonth;
            }
            set
            {
                OnLeaseTimeMonthChanging(value);
                ReportPropertyChanging("LeaseTimeMonth");
                _LeaseTimeMonth = StructuralObject.SetValidValue(value, "LeaseTimeMonth");
                ReportPropertyChanged("LeaseTimeMonth");
                OnLeaseTimeMonthChanged();
            }
        }
        private global::System.Int32 _LeaseTimeMonth;
        partial void OnLeaseTimeMonthChanging(global::System.Int32 value);
        partial void OnLeaseTimeMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CostOfFund
        {
            get
            {
                return _CostOfFund;
            }
            set
            {
                OnCostOfFundChanging(value);
                ReportPropertyChanging("CostOfFund");
                _CostOfFund = StructuralObject.SetValidValue(value, false, "CostOfFund");
                ReportPropertyChanged("CostOfFund");
                OnCostOfFundChanged();
            }
        }
        private global::System.String _CostOfFund;
        partial void OnCostOfFundChanging(global::System.String value);
        partial void OnCostOfFundChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Margin
        {
            get
            {
                return _Margin;
            }
            set
            {
                OnMarginChanging(value);
                ReportPropertyChanging("Margin");
                _Margin = StructuralObject.SetValidValue(value, false, "Margin");
                ReportPropertyChanged("Margin");
                OnMarginChanged();
            }
        }
        private global::System.String _Margin;
        partial void OnMarginChanging(global::System.String value);
        partial void OnMarginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ApplicableStartDate
        {
            get
            {
                return _ApplicableStartDate;
            }
            set
            {
                OnApplicableStartDateChanging(value);
                ReportPropertyChanging("ApplicableStartDate");
                _ApplicableStartDate = StructuralObject.SetValidValue(value, "ApplicableStartDate");
                ReportPropertyChanged("ApplicableStartDate");
                OnApplicableStartDateChanged();
            }
        }
        private global::System.DateTime _ApplicableStartDate;
        partial void OnApplicableStartDateChanging(global::System.DateTime value);
        partial void OnApplicableStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ApplicableEndDate
        {
            get
            {
                return _ApplicableEndDate;
            }
            set
            {
                OnApplicableEndDateChanging(value);
                ReportPropertyChanging("ApplicableEndDate");
                _ApplicableEndDate = StructuralObject.SetValidValue(value, "ApplicableEndDate");
                ReportPropertyChanged("ApplicableEndDate");
                OnApplicableEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ApplicableEndDate;
        partial void OnApplicableEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnApplicableEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EditNote
        {
            get
            {
                return _EditNote;
            }
            set
            {
                OnEditNoteChanging(value);
                ReportPropertyChanging("EditNote");
                _EditNote = StructuralObject.SetValidValue(value, false, "EditNote");
                ReportPropertyChanged("EditNote");
                OnEditNoteChanged();
            }
        }
        private global::System.String _EditNote;
        partial void OnEditNoteChanging(global::System.String value);
        partial void OnEditNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MonthlyPayment
        {
            get
            {
                return _MonthlyPayment;
            }
            set
            {
                OnMonthlyPaymentChanging(value);
                ReportPropertyChanging("MonthlyPayment");
                _MonthlyPayment = StructuralObject.SetValidValue(value, false, "MonthlyPayment");
                ReportPropertyChanged("MonthlyPayment");
                OnMonthlyPaymentChanged();
            }
        }
        private global::System.String _MonthlyPayment;
        partial void OnMonthlyPaymentChanging(global::System.String value);
        partial void OnMonthlyPaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isDeleted
        {
            get
            {
                return _isDeleted;
            }
            set
            {
                OnisDeletedChanging(value);
                ReportPropertyChanging("isDeleted");
                _isDeleted = StructuralObject.SetValidValue(value, "isDeleted");
                ReportPropertyChanged("isDeleted");
                OnisDeletedChanged();
            }
        }
        private global::System.Boolean _isDeleted;
        partial void OnisDeletedChanging(global::System.Boolean value);
        partial void OnisDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedDate
        {
            get
            {
                return _DeletedDate;
            }
            set
            {
                OnDeletedDateChanging(value);
                ReportPropertyChanging("DeletedDate");
                _DeletedDate = StructuralObject.SetValidValue(value, "DeletedDate");
                ReportPropertyChanged("DeletedDate");
                OnDeletedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedDate;
        partial void OnDeletedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FunderMargin
        {
            get
            {
                return _FunderMargin;
            }
            set
            {
                OnFunderMarginChanging(value);
                ReportPropertyChanging("FunderMargin");
                _FunderMargin = StructuralObject.SetValidValue(value, true, "FunderMargin");
                ReportPropertyChanged("FunderMargin");
                OnFunderMarginChanged();
            }
        }
        private global::System.String _FunderMargin;
        partial void OnFunderMarginChanging(global::System.String value);
        partial void OnFunderMarginChanged();

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="FinanceDBModel", Name="Country_GetAll_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Country_GetAll_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country_GetAll_Result object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="currency">Initial value of the Currency property.</param>
        /// <param name="enable">Initial value of the Enable property.</param>
        /// <param name="roundCurrency">Initial value of the RoundCurrency property.</param>
        public static Country_GetAll_Result CreateCountry_GetAll_Result(global::System.Int32 id, global::System.String name, global::System.String currency, global::System.Int32 enable, global::System.Boolean roundCurrency)
        {
            Country_GetAll_Result country_GetAll_Result = new Country_GetAll_Result();
            country_GetAll_Result.ID = id;
            country_GetAll_Result.Name = name;
            country_GetAll_Result.Currency = currency;
            country_GetAll_Result.Enable = enable;
            country_GetAll_Result.RoundCurrency = roundCurrency;
            return country_GetAll_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value, "ID");
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mail
        {
            get
            {
                return _Mail;
            }
            set
            {
                OnMailChanging(value);
                ReportPropertyChanging("Mail");
                _Mail = StructuralObject.SetValidValue(value, true, "Mail");
                ReportPropertyChanged("Mail");
                OnMailChanged();
            }
        }
        private global::System.String _Mail;
        partial void OnMailChanging(global::System.String value);
        partial void OnMailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EditNote
        {
            get
            {
                return _EditNote;
            }
            set
            {
                OnEditNoteChanging(value);
                ReportPropertyChanging("EditNote");
                _EditNote = StructuralObject.SetValidValue(value, true, "EditNote");
                ReportPropertyChanged("EditNote");
                OnEditNoteChanged();
            }
        }
        private global::System.String _EditNote;
        partial void OnEditNoteChanging(global::System.String value);
        partial void OnEditNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                OnCurrencyChanging(value);
                ReportPropertyChanging("Currency");
                _Currency = StructuralObject.SetValidValue(value, false, "Currency");
                ReportPropertyChanged("Currency");
                OnCurrencyChanged();
            }
        }
        private global::System.String _Currency;
        partial void OnCurrencyChanging(global::System.String value);
        partial void OnCurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Enable
        {
            get
            {
                return _Enable;
            }
            set
            {
                OnEnableChanging(value);
                ReportPropertyChanging("Enable");
                _Enable = StructuralObject.SetValidValue(value, "Enable");
                ReportPropertyChanged("Enable");
                OnEnableChanged();
            }
        }
        private global::System.Int32 _Enable;
        partial void OnEnableChanging(global::System.Int32 value);
        partial void OnEnableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean RoundCurrency
        {
            get
            {
                return _RoundCurrency;
            }
            set
            {
                OnRoundCurrencyChanging(value);
                ReportPropertyChanging("RoundCurrency");
                _RoundCurrency = StructuralObject.SetValidValue(value, "RoundCurrency");
                ReportPropertyChanged("RoundCurrency");
                OnRoundCurrencyChanged();
            }
        }
        private global::System.Boolean _RoundCurrency;
        partial void OnRoundCurrencyChanging(global::System.Boolean value);
        partial void OnRoundCurrencyChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="FinanceDBModel", Name="InterestRate_GetAll_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class InterestRate_GetAll_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InterestRate_GetAll_Result object.
        /// </summary>
        /// <param name="countyLeaseTimeID">Initial value of the CountyLeaseTimeID property.</param>
        /// <param name="countryName">Initial value of the CountryName property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="leaseTime">Initial value of the LeaseTime property.</param>
        /// <param name="leaseTimeID">Initial value of the LeaseTimeID property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="countryCurrency">Initial value of the CountryCurrency property.</param>
        /// <param name="roundCurrency">Initial value of the RoundCurrency property.</param>
        public static InterestRate_GetAll_Result CreateInterestRate_GetAll_Result(global::System.Int32 countyLeaseTimeID, global::System.String countryName, global::System.Int32 countryID, global::System.Int32 leaseTime, global::System.Int32 leaseTimeID, global::System.DateTime startDate, global::System.Int32 isActive, global::System.String countryCurrency, global::System.Boolean roundCurrency)
        {
            InterestRate_GetAll_Result interestRate_GetAll_Result = new InterestRate_GetAll_Result();
            interestRate_GetAll_Result.CountyLeaseTimeID = countyLeaseTimeID;
            interestRate_GetAll_Result.CountryName = countryName;
            interestRate_GetAll_Result.CountryID = countryID;
            interestRate_GetAll_Result.LeaseTime = leaseTime;
            interestRate_GetAll_Result.LeaseTimeID = leaseTimeID;
            interestRate_GetAll_Result.StartDate = startDate;
            interestRate_GetAll_Result.IsActive = isActive;
            interestRate_GetAll_Result.CountryCurrency = countryCurrency;
            interestRate_GetAll_Result.RoundCurrency = roundCurrency;
            return interestRate_GetAll_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountyLeaseTimeID
        {
            get
            {
                return _CountyLeaseTimeID;
            }
            set
            {
                OnCountyLeaseTimeIDChanging(value);
                ReportPropertyChanging("CountyLeaseTimeID");
                _CountyLeaseTimeID = StructuralObject.SetValidValue(value, "CountyLeaseTimeID");
                ReportPropertyChanged("CountyLeaseTimeID");
                OnCountyLeaseTimeIDChanged();
            }
        }
        private global::System.Int32 _CountyLeaseTimeID;
        partial void OnCountyLeaseTimeIDChanging(global::System.Int32 value);
        partial void OnCountyLeaseTimeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryName
        {
            get
            {
                return _CountryName;
            }
            set
            {
                OnCountryNameChanging(value);
                ReportPropertyChanging("CountryName");
                _CountryName = StructuralObject.SetValidValue(value, false, "CountryName");
                ReportPropertyChanged("CountryName");
                OnCountryNameChanged();
            }
        }
        private global::System.String _CountryName;
        partial void OnCountryNameChanging(global::System.String value);
        partial void OnCountryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value, "CountryID");
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseTime
        {
            get
            {
                return _LeaseTime;
            }
            set
            {
                OnLeaseTimeChanging(value);
                ReportPropertyChanging("LeaseTime");
                _LeaseTime = StructuralObject.SetValidValue(value, "LeaseTime");
                ReportPropertyChanged("LeaseTime");
                OnLeaseTimeChanged();
            }
        }
        private global::System.Int32 _LeaseTime;
        partial void OnLeaseTimeChanging(global::System.Int32 value);
        partial void OnLeaseTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseTimeID
        {
            get
            {
                return _LeaseTimeID;
            }
            set
            {
                OnLeaseTimeIDChanging(value);
                ReportPropertyChanging("LeaseTimeID");
                _LeaseTimeID = StructuralObject.SetValidValue(value, "LeaseTimeID");
                ReportPropertyChanged("LeaseTimeID");
                OnLeaseTimeIDChanged();
            }
        }
        private global::System.Int32 _LeaseTimeID;
        partial void OnLeaseTimeIDChanging(global::System.Int32 value);
        partial void OnLeaseTimeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value, "StartDate");
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value, "EndDate");
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Margin
        {
            get
            {
                return _Margin;
            }
            set
            {
                OnMarginChanging(value);
                ReportPropertyChanging("Margin");
                _Margin = StructuralObject.SetValidValue(value, true, "Margin");
                ReportPropertyChanged("Margin");
                OnMarginChanged();
            }
        }
        private global::System.String _Margin;
        partial void OnMarginChanging(global::System.String value);
        partial void OnMarginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CostOfFunds
        {
            get
            {
                return _CostOfFunds;
            }
            set
            {
                OnCostOfFundsChanging(value);
                ReportPropertyChanging("CostOfFunds");
                _CostOfFunds = StructuralObject.SetValidValue(value, true, "CostOfFunds");
                ReportPropertyChanged("CostOfFunds");
                OnCostOfFundsChanged();
            }
        }
        private global::System.String _CostOfFunds;
        partial void OnCostOfFundsChanging(global::System.String value);
        partial void OnCostOfFundsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> IRR
        {
            get
            {
                return _IRR;
            }
            set
            {
                OnIRRChanging(value);
                ReportPropertyChanging("IRR");
                _IRR = StructuralObject.SetValidValue(value, "IRR");
                ReportPropertyChanged("IRR");
                OnIRRChanged();
            }
        }
        private Nullable<global::System.Double> _IRR;
        partial void OnIRRChanging(Nullable<global::System.Double> value);
        partial void OnIRRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Int32 _IsActive;
        partial void OnIsActiveChanging(global::System.Int32 value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryEmail
        {
            get
            {
                return _CountryEmail;
            }
            set
            {
                OnCountryEmailChanging(value);
                ReportPropertyChanging("CountryEmail");
                _CountryEmail = StructuralObject.SetValidValue(value, true, "CountryEmail");
                ReportPropertyChanged("CountryEmail");
                OnCountryEmailChanged();
            }
        }
        private global::System.String _CountryEmail;
        partial void OnCountryEmailChanging(global::System.String value);
        partial void OnCountryEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FunderMargin
        {
            get
            {
                return _FunderMargin;
            }
            set
            {
                OnFunderMarginChanging(value);
                ReportPropertyChanging("FunderMargin");
                _FunderMargin = StructuralObject.SetValidValue(value, true, "FunderMargin");
                ReportPropertyChanged("FunderMargin");
                OnFunderMarginChanged();
            }
        }
        private global::System.String _FunderMargin;
        partial void OnFunderMarginChanging(global::System.String value);
        partial void OnFunderMarginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryCurrency
        {
            get
            {
                return _CountryCurrency;
            }
            set
            {
                OnCountryCurrencyChanging(value);
                ReportPropertyChanging("CountryCurrency");
                _CountryCurrency = StructuralObject.SetValidValue(value, false, "CountryCurrency");
                ReportPropertyChanged("CountryCurrency");
                OnCountryCurrencyChanged();
            }
        }
        private global::System.String _CountryCurrency;
        partial void OnCountryCurrencyChanging(global::System.String value);
        partial void OnCountryCurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean RoundCurrency
        {
            get
            {
                return _RoundCurrency;
            }
            set
            {
                OnRoundCurrencyChanging(value);
                ReportPropertyChanging("RoundCurrency");
                _RoundCurrency = StructuralObject.SetValidValue(value, "RoundCurrency");
                ReportPropertyChanged("RoundCurrency");
                OnRoundCurrencyChanged();
            }
        }
        private global::System.Boolean _RoundCurrency;
        partial void OnRoundCurrencyChanging(global::System.Boolean value);
        partial void OnRoundCurrencyChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="FinanceDBModel", Name="LeaseTime_GetAll_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class LeaseTime_GetAll_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeaseTime_GetAll_Result object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="months">Initial value of the Months property.</param>
        public static LeaseTime_GetAll_Result CreateLeaseTime_GetAll_Result(global::System.Int32 id, global::System.Int32 months)
        {
            LeaseTime_GetAll_Result leaseTime_GetAll_Result = new LeaseTime_GetAll_Result();
            leaseTime_GetAll_Result.ID = id;
            leaseTime_GetAll_Result.Months = months;
            return leaseTime_GetAll_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value, "ID");
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Months
        {
            get
            {
                return _Months;
            }
            set
            {
                OnMonthsChanging(value);
                ReportPropertyChanging("Months");
                _Months = StructuralObject.SetValidValue(value, "Months");
                ReportPropertyChanged("Months");
                OnMonthsChanged();
            }
        }
        private global::System.Int32 _Months;
        partial void OnMonthsChanging(global::System.Int32 value);
        partial void OnMonthsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="FinanceDBModel", Name="StoredOffer_Add_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class StoredOffer_Add_Result : ComplexObject
    {
        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SubmitID
        {
            get
            {
                return _SubmitID;
            }
            set
            {
                OnSubmitIDChanging(value);
                ReportPropertyChanging("SubmitID");
                _SubmitID = StructuralObject.SetValidValue(value, "SubmitID");
                ReportPropertyChanged("SubmitID");
                OnSubmitIDChanged();
            }
        }
        private Nullable<global::System.Decimal> _SubmitID;
        partial void OnSubmitIDChanging(Nullable<global::System.Decimal> value);
        partial void OnSubmitIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="FinanceDBModel", Name="StoredOffer_GetAll_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class StoredOffer_GetAll_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StoredOffer_GetAll_Result object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="submitter">Initial value of the Submitter property.</param>
        /// <param name="submitDate">Initial value of the SubmitDate property.</param>
        /// <param name="offerValue">Initial value of the OfferValue property.</param>
        /// <param name="country">Initial value of the Country property.</param>
        /// <param name="customerName">Initial value of the CustomerName property.</param>
        /// <param name="leaseTimeMonth">Initial value of the LeaseTimeMonth property.</param>
        /// <param name="applicableStartDate">Initial value of the ApplicableStartDate property.</param>
        /// <param name="editNote">Initial value of the EditNote property.</param>
        /// <param name="monthlyPayment">Initial value of the MonthlyPayment property.</param>
        public static StoredOffer_GetAll_Result CreateStoredOffer_GetAll_Result(global::System.Int32 id, global::System.String submitter, global::System.DateTime submitDate, global::System.String offerValue, global::System.String country, global::System.String customerName, global::System.Int32 leaseTimeMonth, global::System.DateTime applicableStartDate, global::System.String editNote, global::System.String monthlyPayment)
        {
            StoredOffer_GetAll_Result storedOffer_GetAll_Result = new StoredOffer_GetAll_Result();
            storedOffer_GetAll_Result.ID = id;
            storedOffer_GetAll_Result.Submitter = submitter;
            storedOffer_GetAll_Result.SubmitDate = submitDate;
            storedOffer_GetAll_Result.OfferValue = offerValue;
            storedOffer_GetAll_Result.Country = country;
            storedOffer_GetAll_Result.CustomerName = customerName;
            storedOffer_GetAll_Result.LeaseTimeMonth = leaseTimeMonth;
            storedOffer_GetAll_Result.ApplicableStartDate = applicableStartDate;
            storedOffer_GetAll_Result.EditNote = editNote;
            storedOffer_GetAll_Result.MonthlyPayment = monthlyPayment;
            return storedOffer_GetAll_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value, "ID");
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Submitter
        {
            get
            {
                return _Submitter;
            }
            set
            {
                OnSubmitterChanging(value);
                ReportPropertyChanging("Submitter");
                _Submitter = StructuralObject.SetValidValue(value, false, "Submitter");
                ReportPropertyChanged("Submitter");
                OnSubmitterChanged();
            }
        }
        private global::System.String _Submitter;
        partial void OnSubmitterChanging(global::System.String value);
        partial void OnSubmitterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SubmitDate
        {
            get
            {
                return _SubmitDate;
            }
            set
            {
                OnSubmitDateChanging(value);
                ReportPropertyChanging("SubmitDate");
                _SubmitDate = StructuralObject.SetValidValue(value, "SubmitDate");
                ReportPropertyChanged("SubmitDate");
                OnSubmitDateChanged();
            }
        }
        private global::System.DateTime _SubmitDate;
        partial void OnSubmitDateChanging(global::System.DateTime value);
        partial void OnSubmitDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OfferValue
        {
            get
            {
                return _OfferValue;
            }
            set
            {
                OnOfferValueChanging(value);
                ReportPropertyChanging("OfferValue");
                _OfferValue = StructuralObject.SetValidValue(value, false, "OfferValue");
                ReportPropertyChanged("OfferValue");
                OnOfferValueChanged();
            }
        }
        private global::System.String _OfferValue;
        partial void OnOfferValueChanging(global::System.String value);
        partial void OnOfferValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, false, "Country");
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CustomerName
        {
            get
            {
                return _CustomerName;
            }
            set
            {
                OnCustomerNameChanging(value);
                ReportPropertyChanging("CustomerName");
                _CustomerName = StructuralObject.SetValidValue(value, false, "CustomerName");
                ReportPropertyChanged("CustomerName");
                OnCustomerNameChanged();
            }
        }
        private global::System.String _CustomerName;
        partial void OnCustomerNameChanging(global::System.String value);
        partial void OnCustomerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrganizationNumber
        {
            get
            {
                return _OrganizationNumber;
            }
            set
            {
                OnOrganizationNumberChanging(value);
                ReportPropertyChanging("OrganizationNumber");
                _OrganizationNumber = StructuralObject.SetValidValue(value, true, "OrganizationNumber");
                ReportPropertyChanged("OrganizationNumber");
                OnOrganizationNumberChanged();
            }
        }
        private global::System.String _OrganizationNumber;
        partial void OnOrganizationNumberChanging(global::System.String value);
        partial void OnOrganizationNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerEmail
        {
            get
            {
                return _CustomerEmail;
            }
            set
            {
                OnCustomerEmailChanging(value);
                ReportPropertyChanging("CustomerEmail");
                _CustomerEmail = StructuralObject.SetValidValue(value, true, "CustomerEmail");
                ReportPropertyChanged("CustomerEmail");
                OnCustomerEmailChanged();
            }
        }
        private global::System.String _CustomerEmail;
        partial void OnCustomerEmailChanging(global::System.String value);
        partial void OnCustomerEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerPhone
        {
            get
            {
                return _CustomerPhone;
            }
            set
            {
                OnCustomerPhoneChanging(value);
                ReportPropertyChanging("CustomerPhone");
                _CustomerPhone = StructuralObject.SetValidValue(value, true, "CustomerPhone");
                ReportPropertyChanged("CustomerPhone");
                OnCustomerPhoneChanged();
            }
        }
        private global::System.String _CustomerPhone;
        partial void OnCustomerPhoneChanging(global::System.String value);
        partial void OnCustomerPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseTimeMonth
        {
            get
            {
                return _LeaseTimeMonth;
            }
            set
            {
                OnLeaseTimeMonthChanging(value);
                ReportPropertyChanging("LeaseTimeMonth");
                _LeaseTimeMonth = StructuralObject.SetValidValue(value, "LeaseTimeMonth");
                ReportPropertyChanged("LeaseTimeMonth");
                OnLeaseTimeMonthChanged();
            }
        }
        private global::System.Int32 _LeaseTimeMonth;
        partial void OnLeaseTimeMonthChanging(global::System.Int32 value);
        partial void OnLeaseTimeMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> IRR
        {
            get
            {
                return _IRR;
            }
            set
            {
                OnIRRChanging(value);
                ReportPropertyChanging("IRR");
                _IRR = StructuralObject.SetValidValue(value, "IRR");
                ReportPropertyChanged("IRR");
                OnIRRChanged();
            }
        }
        private Nullable<global::System.Double> _IRR;
        partial void OnIRRChanging(Nullable<global::System.Double> value);
        partial void OnIRRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CostOfFund
        {
            get
            {
                return _CostOfFund;
            }
            set
            {
                OnCostOfFundChanging(value);
                ReportPropertyChanging("CostOfFund");
                _CostOfFund = StructuralObject.SetValidValue(value, true, "CostOfFund");
                ReportPropertyChanged("CostOfFund");
                OnCostOfFundChanged();
            }
        }
        private global::System.String _CostOfFund;
        partial void OnCostOfFundChanging(global::System.String value);
        partial void OnCostOfFundChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Margin
        {
            get
            {
                return _Margin;
            }
            set
            {
                OnMarginChanging(value);
                ReportPropertyChanging("Margin");
                _Margin = StructuralObject.SetValidValue(value, true, "Margin");
                ReportPropertyChanged("Margin");
                OnMarginChanged();
            }
        }
        private global::System.String _Margin;
        partial void OnMarginChanging(global::System.String value);
        partial void OnMarginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ApplicableStartDate
        {
            get
            {
                return _ApplicableStartDate;
            }
            set
            {
                OnApplicableStartDateChanging(value);
                ReportPropertyChanging("ApplicableStartDate");
                _ApplicableStartDate = StructuralObject.SetValidValue(value, "ApplicableStartDate");
                ReportPropertyChanged("ApplicableStartDate");
                OnApplicableStartDateChanged();
            }
        }
        private global::System.DateTime _ApplicableStartDate;
        partial void OnApplicableStartDateChanging(global::System.DateTime value);
        partial void OnApplicableStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ApplicableEndDate
        {
            get
            {
                return _ApplicableEndDate;
            }
            set
            {
                OnApplicableEndDateChanging(value);
                ReportPropertyChanging("ApplicableEndDate");
                _ApplicableEndDate = StructuralObject.SetValidValue(value, "ApplicableEndDate");
                ReportPropertyChanged("ApplicableEndDate");
                OnApplicableEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ApplicableEndDate;
        partial void OnApplicableEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnApplicableEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EditNote
        {
            get
            {
                return _EditNote;
            }
            set
            {
                OnEditNoteChanging(value);
                ReportPropertyChanging("EditNote");
                _EditNote = StructuralObject.SetValidValue(value, false, "EditNote");
                ReportPropertyChanged("EditNote");
                OnEditNoteChanged();
            }
        }
        private global::System.String _EditNote;
        partial void OnEditNoteChanging(global::System.String value);
        partial void OnEditNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FunderMargin
        {
            get
            {
                return _FunderMargin;
            }
            set
            {
                OnFunderMarginChanging(value);
                ReportPropertyChanging("FunderMargin");
                _FunderMargin = StructuralObject.SetValidValue(value, true, "FunderMargin");
                ReportPropertyChanged("FunderMargin");
                OnFunderMarginChanged();
            }
        }
        private global::System.String _FunderMargin;
        partial void OnFunderMarginChanging(global::System.String value);
        partial void OnFunderMarginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MonthlyPayment
        {
            get
            {
                return _MonthlyPayment;
            }
            set
            {
                OnMonthlyPaymentChanging(value);
                ReportPropertyChanging("MonthlyPayment");
                _MonthlyPayment = StructuralObject.SetValidValue(value, false, "MonthlyPayment");
                ReportPropertyChanged("MonthlyPayment");
                OnMonthlyPaymentChanged();
            }
        }
        private global::System.String _MonthlyPayment;
        partial void OnMonthlyPaymentChanging(global::System.String value);
        partial void OnMonthlyPaymentChanged();

        #endregion

    }

    #endregion

}
